// Code generated by protoc-gen-go.
// source: settings.proto
// DO NOT EDIT!

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type FestivalSettings_FestivalType int32

const (
	FestivalSettings_NONE      FestivalSettings_FestivalType = 0
	FestivalSettings_HALLOWEEN FestivalSettings_FestivalType = 1
	FestivalSettings_HOLIDAY   FestivalSettings_FestivalType = 2
)

var FestivalSettings_FestivalType_name = map[int32]string{
	0: "NONE",
	1: "HALLOWEEN",
	2: "HOLIDAY",
}
var FestivalSettings_FestivalType_value = map[string]int32{
	"NONE":      0,
	"HALLOWEEN": 1,
	"HOLIDAY":   2,
}

func (x FestivalSettings_FestivalType) String() string {
	return proto.EnumName(FestivalSettings_FestivalType_name, int32(x))
}
func (FestivalSettings_FestivalType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor10, []int{1, 0}
}

type FortSettings struct {
	InteractionRangeMeters    float64 `protobuf:"fixed64,1,opt,name=interaction_range_meters" json:"interaction_range_meters,omitempty"`
	MaxTotalDeployedPokemon   int32   `protobuf:"varint,2,opt,name=max_total_deployed_pokemon" json:"max_total_deployed_pokemon,omitempty"`
	MaxPlayerDeployedPokemon  int32   `protobuf:"varint,3,opt,name=max_player_deployed_pokemon" json:"max_player_deployed_pokemon,omitempty"`
	DeployStaminaMultiplier   float64 `protobuf:"fixed64,4,opt,name=deploy_stamina_multiplier" json:"deploy_stamina_multiplier,omitempty"`
	DeployAttackMultiplier    float64 `protobuf:"fixed64,5,opt,name=deploy_attack_multiplier" json:"deploy_attack_multiplier,omitempty"`
	FarInteractionRangeMeters float64 `protobuf:"fixed64,6,opt,name=far_interaction_range_meters" json:"far_interaction_range_meters,omitempty"`
}

func (m *FortSettings) Reset()                    { *m = FortSettings{} }
func (m *FortSettings) String() string            { return proto.CompactTextString(m) }
func (*FortSettings) ProtoMessage()               {}
func (*FortSettings) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

type FestivalSettings struct {
	FestivalType FestivalSettings_FestivalType `protobuf:"varint,1,opt,name=festival_type,enum=POGOProtos.Settings.FestivalSettings_FestivalType" json:"festival_type,omitempty"`
	Key          string                        `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Vector       string                        `protobuf:"bytes,3,opt,name=vector" json:"vector,omitempty"`
}

func (m *FestivalSettings) Reset()                    { *m = FestivalSettings{} }
func (m *FestivalSettings) String() string            { return proto.CompactTextString(m) }
func (*FestivalSettings) ProtoMessage()               {}
func (*FestivalSettings) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{1} }

type LevelSettings struct {
	TrainerCpModifier         float64 `protobuf:"fixed64,2,opt,name=trainer_cp_modifier" json:"trainer_cp_modifier,omitempty"`
	TrainerDifficultyModifier float64 `protobuf:"fixed64,3,opt,name=trainer_difficulty_modifier" json:"trainer_difficulty_modifier,omitempty"`
}

func (m *LevelSettings) Reset()                    { *m = LevelSettings{} }
func (m *LevelSettings) String() string            { return proto.CompactTextString(m) }
func (*LevelSettings) ProtoMessage()               {}
func (*LevelSettings) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{2} }

type InventorySettings struct {
	MaxPokemon   int32 `protobuf:"varint,1,opt,name=max_pokemon" json:"max_pokemon,omitempty"`
	MaxBagItems  int32 `protobuf:"varint,2,opt,name=max_bag_items" json:"max_bag_items,omitempty"`
	BasePokemon  int32 `protobuf:"varint,3,opt,name=base_pokemon" json:"base_pokemon,omitempty"`
	BaseBagItems int32 `protobuf:"varint,4,opt,name=base_bag_items" json:"base_bag_items,omitempty"`
	BaseEggs     int32 `protobuf:"varint,5,opt,name=base_eggs" json:"base_eggs,omitempty"`
}

func (m *InventorySettings) Reset()                    { *m = InventorySettings{} }
func (m *InventorySettings) String() string            { return proto.CompactTextString(m) }
func (*InventorySettings) ProtoMessage()               {}
func (*InventorySettings) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{3} }

type DownloadSettingsAction struct {
	Hash string `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
}

func (m *DownloadSettingsAction) Reset()                    { *m = DownloadSettingsAction{} }
func (m *DownloadSettingsAction) String() string            { return proto.CompactTextString(m) }
func (*DownloadSettingsAction) ProtoMessage()               {}
func (*DownloadSettingsAction) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{4} }

type PasscodeSettings struct {
	ShowPasscodeInStore bool `protobuf:"varint,1,opt,name=show_passcode_in_store" json:"show_passcode_in_store,omitempty"`
}

func (m *PasscodeSettings) Reset()                    { *m = PasscodeSettings{} }
func (m *PasscodeSettings) String() string            { return proto.CompactTextString(m) }
func (*PasscodeSettings) ProtoMessage()               {}
func (*PasscodeSettings) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{5} }

type MapSettings struct {
	PokemonVisibleRange            float64 `protobuf:"fixed64,1,opt,name=pokemon_visible_range" json:"pokemon_visible_range,omitempty"`
	PokeNavRangeMeters             float64 `protobuf:"fixed64,2,opt,name=poke_nav_range_meters" json:"poke_nav_range_meters,omitempty"`
	EncounterRangeMeters           float64 `protobuf:"fixed64,3,opt,name=encounter_range_meters" json:"encounter_range_meters,omitempty"`
	GetMapObjectsMinRefreshSeconds float32 `protobuf:"fixed32,4,opt,name=get_map_objects_min_refresh_seconds" json:"get_map_objects_min_refresh_seconds,omitempty"`
	GetMapObjectsMaxRefreshSeconds float32 `protobuf:"fixed32,5,opt,name=get_map_objects_max_refresh_seconds" json:"get_map_objects_max_refresh_seconds,omitempty"`
	GetMapObjectsMinDistanceMeters float32 `protobuf:"fixed32,6,opt,name=get_map_objects_min_distance_meters" json:"get_map_objects_min_distance_meters,omitempty"`
	GoogleMapsApiKey               string  `protobuf:"bytes,7,opt,name=google_maps_api_key" json:"google_maps_api_key,omitempty"`
	MinNearbyHideSightings         int32   `protobuf:"varint,8,opt,name=min_nearby_hide_sightings" json:"min_nearby_hide_sightings,omitempty"`
}

func (m *MapSettings) Reset()                    { *m = MapSettings{} }
func (m *MapSettings) String() string            { return proto.CompactTextString(m) }
func (*MapSettings) ProtoMessage()               {}
func (*MapSettings) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{6} }

type GpsSettings struct {
	DrivingWarningSpeedMetersPerSecond float32 `protobuf:"fixed32,1,opt,name=driving_warning_speed_meters_per_second" json:"driving_warning_speed_meters_per_second,omitempty"`
	DrivingWarningCooldownMinutes      float32 `protobuf:"fixed32,2,opt,name=driving_warning_cooldown_minutes" json:"driving_warning_cooldown_minutes,omitempty"`
	DrivingSpeedSampleIntervalSeconds  float32 `protobuf:"fixed32,3,opt,name=driving_speed_sample_interval_seconds" json:"driving_speed_sample_interval_seconds,omitempty"`
	DrivingSpeedSampleCount            int32   `protobuf:"varint,4,opt,name=driving_speed_sample_count" json:"driving_speed_sample_count,omitempty"`
}

func (m *GpsSettings) Reset()                    { *m = GpsSettings{} }
func (m *GpsSettings) String() string            { return proto.CompactTextString(m) }
func (*GpsSettings) ProtoMessage()               {}
func (*GpsSettings) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{7} }

type NewsSettings struct {
	News []*NewsSettings_News `protobuf:"bytes,1,rep,name=news" json:"news,omitempty"`
}

func (m *NewsSettings) Reset()                    { *m = NewsSettings{} }
func (m *NewsSettings) String() string            { return proto.CompactTextString(m) }
func (*NewsSettings) ProtoMessage()               {}
func (*NewsSettings) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{8} }

func (m *NewsSettings) GetNews() []*NewsSettings_News {
	if m != nil {
		return m.News
	}
	return nil
}

type NewsSettings_News struct {
	NewsBundleId       string   `protobuf:"bytes,1,opt,name=news_bundle_id" json:"news_bundle_id,omitempty"`
	ExclusiveCountries []string `protobuf:"bytes,2,rep,name=exclusive_countries" json:"exclusive_countries,omitempty"`
}

func (m *NewsSettings_News) Reset()                    { *m = NewsSettings_News{} }
func (m *NewsSettings_News) String() string            { return proto.CompactTextString(m) }
func (*NewsSettings_News) ProtoMessage()               {}
func (*NewsSettings_News) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{8, 0} }

type SfidaSettings struct {
	LowBatteryThreshold float32 `protobuf:"fixed32,1,opt,name=low_battery_threshold" json:"low_battery_threshold,omitempty"`
}

func (m *SfidaSettings) Reset()                    { *m = SfidaSettings{} }
func (m *SfidaSettings) String() string            { return proto.CompactTextString(m) }
func (*SfidaSettings) ProtoMessage()               {}
func (*SfidaSettings) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{9} }

type TranslationSettings struct {
	TranslationBundleIds []string `protobuf:"bytes,1,rep,name=translation_bundle_ids" json:"translation_bundle_ids,omitempty"`
}

func (m *TranslationSettings) Reset()                    { *m = TranslationSettings{} }
func (m *TranslationSettings) String() string            { return proto.CompactTextString(m) }
func (*TranslationSettings) ProtoMessage()               {}
func (*TranslationSettings) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{10} }

type EventSettings struct {
	CondolenceRibbonCountry []string `protobuf:"bytes,1,rep,name=condolence_ribbon_country" json:"condolence_ribbon_country,omitempty"`
}

func (m *EventSettings) Reset()                    { *m = EventSettings{} }
func (m *EventSettings) String() string            { return proto.CompactTextString(m) }
func (*EventSettings) ProtoMessage()               {}
func (*EventSettings) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{11} }

type GlobalSettings struct {
	FortSettings         *FortSettings        `protobuf:"bytes,2,opt,name=fort_settings" json:"fort_settings,omitempty"`
	MapSettings          *MapSettings         `protobuf:"bytes,3,opt,name=map_settings" json:"map_settings,omitempty"`
	LevelSettings        *LevelSettings       `protobuf:"bytes,4,opt,name=level_settings" json:"level_settings,omitempty"`
	InventorySettings    *InventorySettings   `protobuf:"bytes,5,opt,name=inventory_settings" json:"inventory_settings,omitempty"`
	MinimumClientVersion string               `protobuf:"bytes,6,opt,name=minimum_client_version" json:"minimum_client_version,omitempty"`
	GpsSettings          *GpsSettings         `protobuf:"bytes,7,opt,name=gps_settings" json:"gps_settings,omitempty"`
	FestivalSettings     *FestivalSettings    `protobuf:"bytes,8,opt,name=festival_settings" json:"festival_settings,omitempty"`
	EventSettings        *EventSettings       `protobuf:"bytes,9,opt,name=event_settings" json:"event_settings,omitempty"`
	MaxPokemonTypes      int32                `protobuf:"varint,10,opt,name=max_pokemon_types" json:"max_pokemon_types,omitempty"`
	SfidaSettings        *SfidaSettings       `protobuf:"bytes,11,opt,name=sfida_settings" json:"sfida_settings,omitempty"`
	NewsSettings         *NewsSettings        `protobuf:"bytes,12,opt,name=news_settings" json:"news_settings,omitempty"`
	TranslationSettings  *TranslationSettings `protobuf:"bytes,13,opt,name=translation_settings" json:"translation_settings,omitempty"`
	PasscodeSettings     *PasscodeSettings    `protobuf:"bytes,14,opt,name=passcode_settings" json:"passcode_settings,omitempty"`
}

func (m *GlobalSettings) Reset()                    { *m = GlobalSettings{} }
func (m *GlobalSettings) String() string            { return proto.CompactTextString(m) }
func (*GlobalSettings) ProtoMessage()               {}
func (*GlobalSettings) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{12} }

func (m *GlobalSettings) GetFortSettings() *FortSettings {
	if m != nil {
		return m.FortSettings
	}
	return nil
}

func (m *GlobalSettings) GetMapSettings() *MapSettings {
	if m != nil {
		return m.MapSettings
	}
	return nil
}

func (m *GlobalSettings) GetLevelSettings() *LevelSettings {
	if m != nil {
		return m.LevelSettings
	}
	return nil
}

func (m *GlobalSettings) GetInventorySettings() *InventorySettings {
	if m != nil {
		return m.InventorySettings
	}
	return nil
}

func (m *GlobalSettings) GetGpsSettings() *GpsSettings {
	if m != nil {
		return m.GpsSettings
	}
	return nil
}

func (m *GlobalSettings) GetFestivalSettings() *FestivalSettings {
	if m != nil {
		return m.FestivalSettings
	}
	return nil
}

func (m *GlobalSettings) GetEventSettings() *EventSettings {
	if m != nil {
		return m.EventSettings
	}
	return nil
}

func (m *GlobalSettings) GetSfidaSettings() *SfidaSettings {
	if m != nil {
		return m.SfidaSettings
	}
	return nil
}

func (m *GlobalSettings) GetNewsSettings() *NewsSettings {
	if m != nil {
		return m.NewsSettings
	}
	return nil
}

func (m *GlobalSettings) GetTranslationSettings() *TranslationSettings {
	if m != nil {
		return m.TranslationSettings
	}
	return nil
}

func (m *GlobalSettings) GetPasscodeSettings() *PasscodeSettings {
	if m != nil {
		return m.PasscodeSettings
	}
	return nil
}

func init() {
	proto.RegisterType((*FortSettings)(nil), "POGOProtos.Settings.FortSettings")
	proto.RegisterType((*FestivalSettings)(nil), "POGOProtos.Settings.FestivalSettings")
	proto.RegisterType((*LevelSettings)(nil), "POGOProtos.Settings.LevelSettings")
	proto.RegisterType((*InventorySettings)(nil), "POGOProtos.Settings.InventorySettings")
	proto.RegisterType((*DownloadSettingsAction)(nil), "POGOProtos.Settings.DownloadSettingsAction")
	proto.RegisterType((*PasscodeSettings)(nil), "POGOProtos.Settings.PasscodeSettings")
	proto.RegisterType((*MapSettings)(nil), "POGOProtos.Settings.MapSettings")
	proto.RegisterType((*GpsSettings)(nil), "POGOProtos.Settings.GpsSettings")
	proto.RegisterType((*NewsSettings)(nil), "POGOProtos.Settings.NewsSettings")
	proto.RegisterType((*NewsSettings_News)(nil), "POGOProtos.Settings.NewsSettings.News")
	proto.RegisterType((*SfidaSettings)(nil), "POGOProtos.Settings.SfidaSettings")
	proto.RegisterType((*TranslationSettings)(nil), "POGOProtos.Settings.TranslationSettings")
	proto.RegisterType((*EventSettings)(nil), "POGOProtos.Settings.EventSettings")
	proto.RegisterType((*GlobalSettings)(nil), "POGOProtos.Settings.GlobalSettings")
	proto.RegisterEnum("POGOProtos.Settings.FestivalSettings_FestivalType", FestivalSettings_FestivalType_name, FestivalSettings_FestivalType_value)
}

func init() { proto.RegisterFile("settings.proto", fileDescriptor10) }

var fileDescriptor10 = []byte{
	// 1029 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x56, 0xdd, 0x4e, 0x1b, 0x47,
	0x14, 0xee, 0xfa, 0x07, 0xf0, 0xf1, 0x8f, 0x60, 0x49, 0x90, 0x81, 0x16, 0x99, 0xa5, 0x49, 0x2d,
	0x55, 0xa5, 0x12, 0x4d, 0xab, 0x28, 0xbd, 0x09, 0x51, 0x80, 0x20, 0x51, 0xa0, 0x4a, 0xa4, 0xaa,
	0xbd, 0x19, 0xcd, 0xee, 0x1e, 0xaf, 0xa7, 0xec, 0xce, 0xac, 0x66, 0xc6, 0x36, 0xbe, 0x6b, 0xdf,
	0xa8, 0xea, 0x6d, 0x5f, 0xa7, 0x6f, 0xd0, 0x17, 0xa8, 0x66, 0x76, 0xbd, 0x6b, 0x83, 0x63, 0xe5,
	0x6a, 0x61, 0xe6, 0xfb, 0x66, 0xce, 0xf9, 0xce, 0x77, 0xce, 0x18, 0x3a, 0x0a, 0xb5, 0x66, 0x3c,
	0x52, 0xc7, 0xa9, 0x14, 0x5a, 0xb8, 0xdb, 0xb7, 0x37, 0x17, 0x37, 0xb7, 0xe6, 0x4f, 0x75, 0xfc,
	0x3e, 0xdf, 0xf2, 0xfe, 0x75, 0xa0, 0x75, 0x2e, 0xa4, 0x9e, 0x2d, 0xb8, 0x3d, 0xe8, 0x32, 0xae,
	0x51, 0xd2, 0x40, 0x33, 0xc1, 0x89, 0xa4, 0x3c, 0x42, 0x92, 0xa0, 0x46, 0xa9, 0xba, 0x4e, 0xcf,
	0xe9, 0x3b, 0xae, 0x07, 0x7b, 0x09, 0xbd, 0x27, 0x5a, 0x68, 0x1a, 0x93, 0x10, 0xd3, 0x58, 0x4c,
	0x31, 0x24, 0xa9, 0xb8, 0xc3, 0x44, 0xf0, 0x6e, 0xa5, 0xe7, 0xf4, 0xeb, 0xee, 0x11, 0xec, 0x1b,
	0x4c, 0x1a, 0xd3, 0x29, 0xca, 0xc7, 0xa0, 0xaa, 0x05, 0x1d, 0xc2, 0x6e, 0xb6, 0x43, 0x94, 0xa6,
	0x09, 0xe3, 0x94, 0x24, 0xa3, 0x58, 0xb3, 0x34, 0x66, 0x28, 0xbb, 0x35, 0x7b, 0x57, 0x0f, 0xba,
	0x39, 0x84, 0x6a, 0x4d, 0x83, 0xbb, 0x79, 0x44, 0xdd, 0x22, 0xbe, 0x84, 0xcf, 0x07, 0x54, 0x92,
	0x8f, 0xc6, 0xbc, 0x66, 0x50, 0xde, 0x5f, 0x0e, 0x6c, 0x9e, 0xa3, 0xd2, 0x6c, 0x4c, 0xe3, 0x22,
	0xd5, 0x4b, 0x68, 0x0f, 0xf2, 0x35, 0xa2, 0xa7, 0x29, 0xda, 0xfc, 0x3a, 0x27, 0x27, 0xc7, 0x4b,
	0x84, 0x3a, 0x7e, 0xc8, 0x2e, 0x16, 0x3e, 0x4c, 0x53, 0x74, 0x9b, 0x50, 0xbd, 0xc3, 0xa9, 0x4d,
	0xbe, 0xe1, 0x76, 0x60, 0x6d, 0x8c, 0x81, 0x16, 0xd2, 0xe6, 0xd9, 0xf0, 0x5e, 0x40, 0x6b, 0x01,
	0xbc, 0x01, 0xb5, 0xeb, 0x9b, 0xeb, 0xb3, 0xcd, 0xcf, 0xdc, 0x36, 0x34, 0xde, 0x9d, 0x5e, 0x5d,
	0xdd, 0xfc, 0x72, 0x76, 0x76, 0xbd, 0xe9, 0xb8, 0x4d, 0x58, 0x7f, 0x77, 0x73, 0x75, 0xf9, 0xf6,
	0xf4, 0xd7, 0xcd, 0x8a, 0xf7, 0x33, 0xb4, 0xaf, 0x70, 0x8c, 0x65, 0xb8, 0xfb, 0xb0, 0xad, 0x25,
	0x65, 0x1c, 0x25, 0x09, 0x52, 0x92, 0x88, 0x90, 0x0d, 0x8c, 0x0c, 0x15, 0x2b, 0xc3, 0x11, 0xec,
	0xcf, 0x36, 0x43, 0x36, 0x18, 0xb0, 0x60, 0x14, 0xeb, 0x69, 0x09, 0xaa, 0x5a, 0x15, 0xfe, 0x70,
	0x60, 0xeb, 0x92, 0x8f, 0x91, 0x6b, 0x21, 0xa7, 0xc5, 0xb9, 0xdb, 0xd0, 0xb4, 0xb5, 0xca, 0x6b,
	0xe3, 0xd8, 0xda, 0x3c, 0x85, 0xb6, 0x59, 0xf4, 0x69, 0x44, 0x98, 0xc6, 0x44, 0xe5, 0x75, 0x7d,
	0x02, 0x2d, 0x9f, 0x2a, 0x7c, 0x50, 0xc8, 0x1d, 0xe8, 0xd8, 0xd5, 0x12, 0x5d, 0xb3, 0xeb, 0x5b,
	0xd0, 0xb0, 0xeb, 0x18, 0x45, 0xca, 0x96, 0xab, 0xee, 0x3d, 0x87, 0x9d, 0xb7, 0x62, 0xc2, 0x63,
	0x41, 0xc3, 0x59, 0x00, 0xa7, 0xb6, 0x6a, 0x6e, 0x0b, 0x6a, 0x43, 0xaa, 0x86, 0xf6, 0xfe, 0x86,
	0x77, 0x02, 0x9b, 0xb7, 0x54, 0xa9, 0x40, 0x84, 0x58, 0x04, 0x7a, 0x00, 0x3b, 0x6a, 0x28, 0x26,
	0x24, 0xcd, 0x37, 0x08, 0xe3, 0x44, 0x69, 0x21, 0xb3, 0xc2, 0x6d, 0x78, 0x7f, 0x57, 0xa0, 0xf9,
	0x13, 0x4d, 0x0b, 0xfc, 0x17, 0xf0, 0x34, 0x8f, 0x93, 0x8c, 0x99, 0x62, 0x7e, 0x8c, 0x99, 0x35,
	0x72, 0x1f, 0xe7, 0xdb, 0x84, 0xd3, 0xf1, 0xa2, 0x65, 0x32, 0x45, 0x0f, 0x60, 0x07, 0x79, 0x20,
	0x46, 0xc6, 0x58, 0x8b, 0xfb, 0x56, 0x4c, 0xf7, 0x6b, 0x38, 0x8a, 0x50, 0x93, 0x84, 0xa6, 0x44,
	0xf8, 0xbf, 0x63, 0xa0, 0x15, 0x49, 0x18, 0x27, 0x12, 0x07, 0x12, 0xd5, 0x90, 0x28, 0x0c, 0x04,
	0x0f, 0x33, 0x25, 0x2a, 0x4b, 0xc1, 0xf4, 0xfe, 0x11, 0xb8, 0xfe, 0x51, 0x30, 0xe3, 0x24, 0x64,
	0x4a, 0x53, 0x1e, 0x2c, 0x38, 0xbb, 0x62, 0x5c, 0x11, 0x09, 0x11, 0xc5, 0x68, 0xf0, 0x8a, 0xd0,
	0x94, 0x11, 0xe3, 0xc4, 0x75, 0xeb, 0xc4, 0x43, 0xd8, 0x35, 0x4c, 0x8e, 0x54, 0xfa, 0x53, 0x32,
	0x64, 0x21, 0x12, 0xc5, 0xa2, 0xa1, 0x95, 0xa7, 0xbb, 0x61, 0x0b, 0xf2, 0x8f, 0x03, 0xcd, 0x8b,
	0x54, 0x15, 0xa2, 0x7d, 0x0b, 0x5f, 0x85, 0x92, 0x8d, 0x19, 0x8f, 0xc8, 0x84, 0x4a, 0x6e, 0xbe,
	0x2a, 0x45, 0x0c, 0xf3, 0x5b, 0x49, 0x8a, 0x32, 0x0f, 0xd7, 0xca, 0x58, 0x71, 0xfb, 0xd0, 0x7b,
	0x48, 0x08, 0x84, 0x88, 0x43, 0x31, 0xe1, 0x26, 0xec, 0x91, 0xc6, 0x4c, 0xd1, 0x8a, 0xfb, 0x0d,
	0x3c, 0x9b, 0x21, 0xb3, 0x23, 0x15, 0x4d, 0xd2, 0x18, 0xb3, 0xde, 0x35, 0x4d, 0x38, 0x93, 0xa1,
	0x6a, 0xe1, 0x1e, 0xec, 0x2d, 0x85, 0xdb, 0x9a, 0x64, 0x0e, 0xf3, 0xfe, 0x74, 0xa0, 0x75, 0x8d,
	0x93, 0x32, 0xfc, 0x17, 0x50, 0xe3, 0x38, 0x31, 0xa3, 0xaa, 0xda, 0x6f, 0x9e, 0x3c, 0x5f, 0xda,
	0xca, 0xf3, 0x04, 0xfb, 0xcf, 0xde, 0x8f, 0x50, 0x33, 0x5f, 0x63, 0x64, 0xc3, 0x26, 0xfe, 0x88,
	0x87, 0x26, 0xb0, 0x2c, 0xc7, 0x86, 0x11, 0x19, 0xef, 0x83, 0x78, 0xa4, 0xd8, 0x38, 0xbf, 0x5f,
	0x32, 0x9b, 0x56, 0xb5, 0xdf, 0xf0, 0x8e, 0xa1, 0xfd, 0x7e, 0xc0, 0x42, 0x3a, 0xef, 0xbb, 0x58,
	0x4c, 0x88, 0x4f, 0xb5, 0x46, 0x39, 0x25, 0x7a, 0x68, 0x6a, 0x2c, 0xe2, 0x5c, 0x30, 0xef, 0x7b,
	0xd8, 0xfe, 0x20, 0x29, 0x57, 0x31, 0x35, 0xbe, 0x9f, 0x77, 0xb7, 0x2e, 0x97, 0xcb, 0x10, 0xb2,
	0x5c, 0x4c, 0x47, 0xb4, 0xcf, 0x4c, 0xeb, 0x16, 0x84, 0x43, 0xd8, 0x35, 0x72, 0x89, 0x18, 0x8d,
	0x29, 0x24, 0xf3, 0x7d, 0xc1, 0xf3, 0xe0, 0xa6, 0x39, 0xe7, 0xbf, 0x3a, 0x74, 0x2e, 0x62, 0xe1,
	0xcf, 0x0d, 0xbd, 0x97, 0xd0, 0x1e, 0x08, 0xa9, 0xc9, 0xec, 0x71, 0xb0, 0xb5, 0x69, 0x9e, 0x1c,
	0x2e, 0x1f, 0x7a, 0xf3, 0x2f, 0xc3, 0x0f, 0xd0, 0x32, 0x96, 0x2c, 0x88, 0x55, 0x4b, 0xec, 0x2d,
	0x25, 0xce, 0xb7, 0xe1, 0x2b, 0xe8, 0xc4, 0x66, 0x90, 0x95, 0xcc, 0x9a, 0x65, 0x7a, 0x4b, 0x99,
	0x8b, 0x33, 0xef, 0x0d, 0xb8, 0x6c, 0x36, 0xb0, 0x4a, 0x7e, 0xdd, 0xf2, 0x97, 0x17, 0xf7, 0xf1,
	0x7c, 0x3b, 0x80, 0x9d, 0x84, 0x71, 0x96, 0x8c, 0x12, 0x12, 0xc4, 0x0c, 0xb9, 0x26, 0x63, 0x94,
	0x8a, 0x09, 0x6e, 0x3b, 0xa8, 0x61, 0xf2, 0x8a, 0x52, 0x55, 0x9e, 0xbe, 0xbe, 0x22, 0xaf, 0xf9,
	0x4e, 0x79, 0x0d, 0x5b, 0xc5, 0xf3, 0x51, 0x90, 0x37, 0x2c, 0xf9, 0xd9, 0x27, 0x3d, 0x21, 0x46,
	0x19, 0x34, 0xd1, 0x96, 0xf4, 0xc6, 0x0a, 0x65, 0x16, 0xab, 0xbf, 0x0b, 0x5b, 0x73, 0x53, 0xdb,
	0xbe, 0x5f, 0xaa, 0x0b, 0x76, 0xec, 0xbe, 0x82, 0x8e, 0x32, 0x86, 0x2c, 0x8f, 0x6d, 0xae, 0x38,
	0x76, 0xd1, 0xbb, 0x2f, 0xa1, 0x6d, 0x3b, 0xa0, 0xa0, 0xb6, 0x56, 0xd8, 0x63, 0xa1, 0xf3, 0xce,
	0xe1, 0xc9, 0xbc, 0x7f, 0x8b, 0x03, 0xda, 0xf6, 0x80, 0xfe, 0xd2, 0x03, 0x96, 0xf5, 0xc1, 0x6b,
	0xd8, 0x2a, 0x06, 0x7c, 0x71, 0x48, 0x67, 0x85, 0xac, 0x0f, 0xdf, 0x89, 0x37, 0x1b, 0xbf, 0xad,
	0xd9, 0x5f, 0x3c, 0xca, 0xcf, 0xbe, 0xdf, 0xfd, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x51, 0x6b, 0x7c,
	0x92, 0x0b, 0x09, 0x00, 0x00,
}
