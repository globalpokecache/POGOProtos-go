// Code generated by protoc-gen-go.
// source: networking_envelopes.proto
// DO NOT EDIT!

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	networking_envelopes.proto
	data_gym.proto
	networking_platform_requests.proto
	networking_responses.proto
	data_player.proto
	maps.proto
	data_quests.proto
	inventory.proto
	settings_master_quest.proto
	data_badge.proto
	settings.proto
	map_pokemon.proto
	networking_requests_messages.proto
	data_capture.proto
	map_fort.proto
	networking_platform_responses.proto
	enums.proto
	networking_requests.proto
	settings_master.proto
	data.proto
	data_battle.proto
	data_logs.proto
	networking_platform.proto
	inventory_item.proto
	settings_master_pokemon.proto
	data_avatar.proto
	settings_master_item.proto

It has these top-level messages:
	ResponseEnvelope
	AuthTicket
	RequestEnvelope
	Signature
	UnknownMessage
	GymMembership
	GymState
	BuyItemAndroidRequest
	UnknownPtr8Request
	BuyItemPokeCoinsRequest
	SendEncryptedSignatureRequest
	GetDownloadUrlsResponse
	FortDeployPokemonResponse
	CheckChallengeResponse
	SetFavoritePokemonResponse
	EchoResponse
	SetBuddyPokemonResponse
	UseIncenseResponse
	NicknamePokemonResponse
	UseItemReviveResponse
	CollectDailyDefenderBonusResponse
	EquipBadgeResponse
	CheckCodenameAvailableResponse
	FortSearchResponse
	EncounterResponse
	UpgradePokemonResponse
	GetPlayerResponse
	ClaimCodenameResponse
	GetInventoryResponse
	SetPlayerTeamResponse
	DownloadSettingsResponse
	CheckAwardedBadgesResponse
	GetAssetDigestResponse
	EvolvePokemonResponse
	GetIncensePokemonResponse
	GetBuddyWalkedResponse
	SetAvatarItemAsViewedResponse
	FortRecallPokemonResponse
	GetGymDetailsResponse
	UseItemGymResponse
	UseItemXpBoostResponse
	DownloadRemoteConfigVersionResponse
	MarkTutorialCompleteResponse
	GetPlayerProfileResponse
	StartGymBattleResponse
	SfidaActionLogResponse
	UseItemCaptureResponse
	LevelUpRewardsResponse
	FortDetailsResponse
	VerifyChallengeResponse
	DownloadItemTemplatesResponse
	UseItemEncounterResponse
	AttackGymResponse
	CollectDailyBonusResponse
	EncounterTutorialCompleteResponse
	RegisterBackgroundDeviceResponse
	UseItemEggIncubatorResponse
	CatchPokemonResponse
	SetAvatarResponse
	ListAvatarCustomizationsResponse
	GetHatchedEggsResponse
	UseItemPotionResponse
	RecycleInventoryItemResponse
	SetContactSettingsResponse
	GetMapObjectsResponse
	ReleasePokemonResponse
	AddFortModifierResponse
	DiskEncounterResponse
	IncenseEncounterResponse
	PlayerPublicProfile
	PlayerCurrency
	Currency
	PlayerAvatar
	ContactSettings
	PlayerCamera
	EquippedBadge
	PlayerStats
	DailyBonus
	SpawnPoint
	MapCell
	DailyQuest
	Quest
	EggIncubator
	InventoryUpgrade
	InventoryUpgrades
	EggIncubators
	InventoryDelta
	InventoryItemData
	InventoryItem
	InventoryKey
	AppliedItem
	AppliedItems
	Candy
	DailyQuestSettings
	BadgeCaptureReward
	FortSettings
	FestivalSettings
	LevelSettings
	InventorySettings
	DownloadSettingsAction
	MapSettings
	GpsSettings
	NewsSettings
	SfidaSettings
	EventSettings
	GlobalSettings
	WildPokemon
	NearbyPokemon
	MapPokemon
	UseItemXpBoostMessage
	GetDownloadUrlsMessage
	MarkTutorialCompleteMessage
	SetFavoritePokemonMessage
	UseItemEggIncubatorMessage
	CheckAwardedBadgesMessage
	IncenseEncounterMessage
	EquipBadgeMessage
	SetAvatarMessage
	EncounterMessage
	FortDeployPokemonMessage
	EncounterTutorialCompleteMessage
	UseItemPotionMessage
	LevelUpRewardsMessage
	ReleasePokemonMessage
	ListAvatarCustomizationsMessage
	UpgradePokemonMessage
	UseItemEncounterMessage
	UseItemReviveMessage
	FortDetailsMessage
	GetIncensePokemonMessage
	CollectDailyBonusMessage
	DownloadSettingsMessage
	ClaimCodenameMessage
	AttackGymMessage
	FortSearchMessage
	UseItemGymMessage
	SetContactSettingsMessage
	CatchPokemonMessage
	VerifyChallengeMessage
	SetBuddyPokemonMessage
	FortRecallPokemonMessage
	EvolvePokemonMessage
	RecycleInventoryItemMessage
	DownloadRemoteConfigVersionMessage
	GetPlayerProfileMessage
	GetGymDetailsMessage
	AddFortModifierMessage
	SetAvatarItemAsViewedMessage
	DownloadItemTemplatesMessage
	NicknamePokemonMessage
	CollectDailyDefenderBonusMessage
	GetAssetDigestMessage
	GetBuddyWalkedMessage
	RegisterBackgroundDeviceMessage
	GetMapObjectsMessage
	StartGymBattleMessage
	EchoMessage
	GetHatchedEggsMessage
	GetPlayerMessage
	GetInventoryMessage
	SetPlayerTeamMessage
	CheckChallengeMessage
	UseItemCaptureMessage
	DiskEncounterMessage
	UseIncenseMessage
	SfidaActionLogMessage
	CaptureAward
	CaptureProbability
	FortLureInfo
	FortModifier
	FortSummary
	FortData
	UnknownPtr8Response
	BuyItemPokeCoinsResponse
	BuyItemAndroidResponse
	GetStoreItemsResponse
	SendEncryptedSignatureResponse
	Request
	IapItemDisplay
	IapSettings
	GenderSettings
	MoveSettings
	QuestSettings
	BadgeSettings
	EquippedBadgeSettings
	TypeEffectiveSettings
	FormSettings
	CameraSettings
	GymLevelSettings
	MoveSequenceSettings
	PlayerLevelSettings
	GymBattleSettings
	PokemonUpgradeSettings
	PokemonSettings
	ItemSettings
	EncounterSettings
	AvatarCustomizationSettings
	PokedexEntry
	DownloadUrlEntry
	PokemonDisplay
	PlayerBadge
	ClientVersion
	PokemonData
	PlayerData
	BackgroundToken
	AssetDigestEntry
	BuddyPokemon
	BattleAction
	BattleLog
	BattlePokemonInfo
	BattleParticipant
	BattleResults
	ActionLogEntry
	BuddyPokemonLogEntry
	FortSearchLogEntry
	CatchPokemonLogEntry
	ItemAward
	ItemData
	CameraAttributes
	EvolutionBranch
	EncounterAttributes
	StatsAttributes
	PokemonGenderSettings
	AvatarCustomization
	AvatarItem
	BattleAttributes
	FortModifierAttributes
	FoodAttributes
	EggIncubatorAttributes
	InventoryUpgradeAttributes
	PokeballAttributes
	ReviveAttributes
	PotionAttributes
	IncenseAttributes
	ExperienceBoostAttributes
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Ignoring public import of PlatformRequestType from networking_platform.proto

// Ignoring public import of Request from networking_requests.proto

// Ignoring public import of RequestType from networking_requests.proto

type ResponseEnvelope_StatusCode int32

const (
	ResponseEnvelope_UNKNOWN                  ResponseEnvelope_StatusCode = 0
	ResponseEnvelope_OK                       ResponseEnvelope_StatusCode = 1
	ResponseEnvelope_OK_RPC_URL_IN_RESPONSE   ResponseEnvelope_StatusCode = 2
	ResponseEnvelope_BAD_REQUEST              ResponseEnvelope_StatusCode = 3
	ResponseEnvelope_INVALID_REQUEST          ResponseEnvelope_StatusCode = 51
	ResponseEnvelope_INVALID_PLATFORM_REQUEST ResponseEnvelope_StatusCode = 52
	ResponseEnvelope_REDIRECT                 ResponseEnvelope_StatusCode = 53
	ResponseEnvelope_SESSION_INVALIDATED      ResponseEnvelope_StatusCode = 100
	ResponseEnvelope_INVALID_AUTH_TOKEN       ResponseEnvelope_StatusCode = 102
)

var ResponseEnvelope_StatusCode_name = map[int32]string{
	0:   "UNKNOWN",
	1:   "OK",
	2:   "OK_RPC_URL_IN_RESPONSE",
	3:   "BAD_REQUEST",
	51:  "INVALID_REQUEST",
	52:  "INVALID_PLATFORM_REQUEST",
	53:  "REDIRECT",
	100: "SESSION_INVALIDATED",
	102: "INVALID_AUTH_TOKEN",
}
var ResponseEnvelope_StatusCode_value = map[string]int32{
	"UNKNOWN": 0,
	"OK":      1,
	"OK_RPC_URL_IN_RESPONSE":   2,
	"BAD_REQUEST":              3,
	"INVALID_REQUEST":          51,
	"INVALID_PLATFORM_REQUEST": 52,
	"REDIRECT":                 53,
	"SESSION_INVALIDATED":      100,
	"INVALID_AUTH_TOKEN":       102,
}

func (x ResponseEnvelope_StatusCode) String() string {
	return proto.EnumName(ResponseEnvelope_StatusCode_name, int32(x))
}
func (ResponseEnvelope_StatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

type ResponseEnvelope struct {
	StatusCode      ResponseEnvelope_StatusCode          `protobuf:"varint,1,opt,name=status_code,enum=POGOProtos.Networking.Envelopes.ResponseEnvelope_StatusCode" json:"status_code,omitempty"`
	RequestId       uint64                               `protobuf:"varint,2,opt,name=request_id" json:"request_id,omitempty"`
	ApiUrl          string                               `protobuf:"bytes,3,opt,name=api_url" json:"api_url,omitempty"`
	PlatformReturns []*ResponseEnvelope_PlatformResponse `protobuf:"bytes,6,rep,name=platform_returns" json:"platform_returns,omitempty"`
	AuthTicket      *AuthTicket                          `protobuf:"bytes,7,opt,name=auth_ticket" json:"auth_ticket,omitempty"`
	Returns         [][]byte                             `protobuf:"bytes,100,rep,name=returns,proto3" json:"returns,omitempty"`
	Error           string                               `protobuf:"bytes,101,opt,name=error" json:"error,omitempty"`
}

func (m *ResponseEnvelope) Reset()                    { *m = ResponseEnvelope{} }
func (m *ResponseEnvelope) String() string            { return proto.CompactTextString(m) }
func (*ResponseEnvelope) ProtoMessage()               {}
func (*ResponseEnvelope) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ResponseEnvelope) GetPlatformReturns() []*ResponseEnvelope_PlatformResponse {
	if m != nil {
		return m.PlatformReturns
	}
	return nil
}

func (m *ResponseEnvelope) GetAuthTicket() *AuthTicket {
	if m != nil {
		return m.AuthTicket
	}
	return nil
}

type ResponseEnvelope_PlatformResponse struct {
	Type     PlatformRequestType `protobuf:"varint,1,opt,name=type,enum=POGOProtos.Networking.Platform.PlatformRequestType" json:"type,omitempty"`
	Response []byte              `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
}

func (m *ResponseEnvelope_PlatformResponse) Reset()         { *m = ResponseEnvelope_PlatformResponse{} }
func (m *ResponseEnvelope_PlatformResponse) String() string { return proto.CompactTextString(m) }
func (*ResponseEnvelope_PlatformResponse) ProtoMessage()    {}
func (*ResponseEnvelope_PlatformResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

type AuthTicket struct {
	Start             []byte `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	ExpireTimestampMs uint64 `protobuf:"varint,2,opt,name=expire_timestamp_ms" json:"expire_timestamp_ms,omitempty"`
	End               []byte `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (m *AuthTicket) Reset()                    { *m = AuthTicket{} }
func (m *AuthTicket) String() string            { return proto.CompactTextString(m) }
func (*AuthTicket) ProtoMessage()               {}
func (*AuthTicket) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type RequestEnvelope struct {
	StatusCode             int32                              `protobuf:"varint,1,opt,name=status_code" json:"status_code,omitempty"`
	RequestId              uint64                             `protobuf:"varint,3,opt,name=request_id" json:"request_id,omitempty"`
	Requests               []*Request                         `protobuf:"bytes,4,rep,name=requests" json:"requests,omitempty"`
	PlatformRequests       []*RequestEnvelope_PlatformRequest `protobuf:"bytes,6,rep,name=platform_requests" json:"platform_requests,omitempty"`
	Latitude               float64                            `protobuf:"fixed64,7,opt,name=latitude" json:"latitude,omitempty"`
	Longitude              float64                            `protobuf:"fixed64,8,opt,name=longitude" json:"longitude,omitempty"`
	Accuracy               float64                            `protobuf:"fixed64,9,opt,name=accuracy" json:"accuracy,omitempty"`
	AuthInfo               *RequestEnvelope_AuthInfo          `protobuf:"bytes,10,opt,name=auth_info" json:"auth_info,omitempty"`
	AuthTicket             *AuthTicket                        `protobuf:"bytes,11,opt,name=auth_ticket" json:"auth_ticket,omitempty"`
	MsSinceLastLocationfix int64                              `protobuf:"varint,12,opt,name=ms_since_last_locationfix" json:"ms_since_last_locationfix,omitempty"`
}

func (m *RequestEnvelope) Reset()                    { *m = RequestEnvelope{} }
func (m *RequestEnvelope) String() string            { return proto.CompactTextString(m) }
func (*RequestEnvelope) ProtoMessage()               {}
func (*RequestEnvelope) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RequestEnvelope) GetRequests() []*Request {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *RequestEnvelope) GetPlatformRequests() []*RequestEnvelope_PlatformRequest {
	if m != nil {
		return m.PlatformRequests
	}
	return nil
}

func (m *RequestEnvelope) GetAuthInfo() *RequestEnvelope_AuthInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

func (m *RequestEnvelope) GetAuthTicket() *AuthTicket {
	if m != nil {
		return m.AuthTicket
	}
	return nil
}

type RequestEnvelope_AuthInfo struct {
	Provider string                        `protobuf:"bytes,1,opt,name=provider" json:"provider,omitempty"`
	Token    *RequestEnvelope_AuthInfo_JWT `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *RequestEnvelope_AuthInfo) Reset()                    { *m = RequestEnvelope_AuthInfo{} }
func (m *RequestEnvelope_AuthInfo) String() string            { return proto.CompactTextString(m) }
func (*RequestEnvelope_AuthInfo) ProtoMessage()               {}
func (*RequestEnvelope_AuthInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func (m *RequestEnvelope_AuthInfo) GetToken() *RequestEnvelope_AuthInfo_JWT {
	if m != nil {
		return m.Token
	}
	return nil
}

type RequestEnvelope_AuthInfo_JWT struct {
	Contents string `protobuf:"bytes,1,opt,name=contents" json:"contents,omitempty"`
	Unknown2 int32  `protobuf:"varint,2,opt,name=unknown2" json:"unknown2,omitempty"`
}

func (m *RequestEnvelope_AuthInfo_JWT) Reset()         { *m = RequestEnvelope_AuthInfo_JWT{} }
func (m *RequestEnvelope_AuthInfo_JWT) String() string { return proto.CompactTextString(m) }
func (*RequestEnvelope_AuthInfo_JWT) ProtoMessage()    {}
func (*RequestEnvelope_AuthInfo_JWT) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 0, 0}
}

type RequestEnvelope_PlatformRequest struct {
	Type           PlatformRequestType `protobuf:"varint,1,opt,name=type,enum=POGOProtos.Networking.Platform.PlatformRequestType" json:"type,omitempty"`
	RequestMessage []byte              `protobuf:"bytes,2,opt,name=request_message,proto3" json:"request_message,omitempty"`
}

func (m *RequestEnvelope_PlatformRequest) Reset()         { *m = RequestEnvelope_PlatformRequest{} }
func (m *RequestEnvelope_PlatformRequest) String() string { return proto.CompactTextString(m) }
func (*RequestEnvelope_PlatformRequest) ProtoMessage()    {}
func (*RequestEnvelope_PlatformRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 1}
}

type Signature struct {
	Field1              []*UnknownMessage           `protobuf:"bytes,1,rep,name=field1" json:"field1,omitempty"`
	TimestampSinceStart uint64                      `protobuf:"varint,2,opt,name=timestamp_since_start" json:"timestamp_since_start,omitempty"`
	Field3              string                      `protobuf:"bytes,3,opt,name=field3" json:"field3,omitempty"`
	LocationFix         []*Signature_LocationFix    `protobuf:"bytes,4,rep,name=location_fix" json:"location_fix,omitempty"`
	GpsInfo             []*Signature_AndroidGpsInfo `protobuf:"bytes,5,rep,name=gps_info" json:"gps_info,omitempty"`
	Field6              []*UnknownMessage           `protobuf:"bytes,6,rep,name=field6" json:"field6,omitempty"`
	SensorInfo          []*Signature_SensorInfo     `protobuf:"bytes,7,rep,name=sensor_info" json:"sensor_info,omitempty"`
	DeviceInfo          *Signature_DeviceInfo       `protobuf:"bytes,8,opt,name=device_info" json:"device_info,omitempty"`
	ActivityStatus      *Signature_ActivityStatus   `protobuf:"bytes,9,opt,name=activity_status" json:"activity_status,omitempty"`
	LocationHash1       uint32                      `protobuf:"varint,10,opt,name=location_hash1" json:"location_hash1,omitempty"`
	Field11             bool                        `protobuf:"varint,11,opt,name=field11" json:"field11,omitempty"`
	Field12             bool                        `protobuf:"varint,12,opt,name=field12" json:"field12,omitempty"`
	Field13             int32                       `protobuf:"varint,13,opt,name=field13" json:"field13,omitempty"`
	Field14             int32                       `protobuf:"varint,14,opt,name=field14" json:"field14,omitempty"`
	Field15             string                      `protobuf:"bytes,15,opt,name=field15" json:"field15,omitempty"`
	Field16             int32                       `protobuf:"varint,16,opt,name=field16" json:"field16,omitempty"`
	Field17             string                      `protobuf:"bytes,17,opt,name=field17" json:"field17,omitempty"`
	Field18             string                      `protobuf:"bytes,18,opt,name=field18" json:"field18,omitempty"`
	Field19             bool                        `protobuf:"varint,19,opt,name=field19" json:"field19,omitempty"`
	LocationHash2       uint32                      `protobuf:"varint,20,opt,name=location_hash2" json:"location_hash2,omitempty"`
	Field21             bool                        `protobuf:"varint,21,opt,name=field21" json:"field21,omitempty"`
	SessionHash         []byte                      `protobuf:"bytes,22,opt,name=session_hash,proto3" json:"session_hash,omitempty"`
	Timestamp           uint64                      `protobuf:"varint,23,opt,name=timestamp" json:"timestamp,omitempty"`
	RequestHash         []uint64                    `protobuf:"varint,24,rep,packed,name=request_hash" json:"request_hash,omitempty"`
	Unknown25           int64                       `protobuf:"varint,25,opt,name=unknown25" json:"unknown25,omitempty"`
}

func (m *Signature) Reset()                    { *m = Signature{} }
func (m *Signature) String() string            { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()               {}
func (*Signature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Signature) GetField1() []*UnknownMessage {
	if m != nil {
		return m.Field1
	}
	return nil
}

func (m *Signature) GetLocationFix() []*Signature_LocationFix {
	if m != nil {
		return m.LocationFix
	}
	return nil
}

func (m *Signature) GetGpsInfo() []*Signature_AndroidGpsInfo {
	if m != nil {
		return m.GpsInfo
	}
	return nil
}

func (m *Signature) GetField6() []*UnknownMessage {
	if m != nil {
		return m.Field6
	}
	return nil
}

func (m *Signature) GetSensorInfo() []*Signature_SensorInfo {
	if m != nil {
		return m.SensorInfo
	}
	return nil
}

func (m *Signature) GetDeviceInfo() *Signature_DeviceInfo {
	if m != nil {
		return m.DeviceInfo
	}
	return nil
}

func (m *Signature) GetActivityStatus() *Signature_ActivityStatus {
	if m != nil {
		return m.ActivityStatus
	}
	return nil
}

type Signature_LocationFix struct {
	Provider           string  `protobuf:"bytes,1,opt,name=provider" json:"provider,omitempty"`
	TimestampSnapshot  uint64  `protobuf:"varint,2,opt,name=timestamp_snapshot" json:"timestamp_snapshot,omitempty"`
	Altitude           float64 `protobuf:"fixed32,4,opt,name=altitude" json:"altitude,omitempty"`
	Latitude           float64 `protobuf:"fixed32,13,opt,name=latitude" json:"latitude,omitempty"`
	Longitude          float64 `protobuf:"fixed32,14,opt,name=longitude" json:"longitude,omitempty"`
	Speed              float64 `protobuf:"fixed32,18,opt,name=speed" json:"speed,omitempty"`
	Course             float64 `protobuf:"fixed32,20,opt,name=course" json:"course,omitempty"`
	HorizontalAccuracy float64 `protobuf:"fixed32,21,opt,name=horizontal_accuracy" json:"horizontal_accuracy,omitempty"`
	VerticalAccuracy   float64 `protobuf:"fixed32,22,opt,name=vertical_accuracy" json:"vertical_accuracy,omitempty"`
	ProviderStatus     uint64  `protobuf:"varint,26,opt,name=provider_status" json:"provider_status,omitempty"`
	// On iOS there are some LocationFixes with unk26=1 and everything else empty
	Floor        uint32 `protobuf:"varint,27,opt,name=floor" json:"floor,omitempty"`
	LocationType uint64 `protobuf:"varint,28,opt,name=location_type" json:"location_type,omitempty"`
}

func (m *Signature_LocationFix) Reset()                    { *m = Signature_LocationFix{} }
func (m *Signature_LocationFix) String() string            { return proto.CompactTextString(m) }
func (*Signature_LocationFix) ProtoMessage()               {}
func (*Signature_LocationFix) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

// don't really care about this since we're not using it
type Signature_AndroidGpsInfo struct {
	TimeToFix     uint64    `protobuf:"varint,1,opt,name=time_to_fix" json:"time_to_fix,omitempty"`
	SatellitesPrn []int32   `protobuf:"varint,2,rep,packed,name=satellites_prn" json:"satellites_prn,omitempty"`
	Azimuth       []float32 `protobuf:"fixed32,3,rep,packed,name=azimuth" json:"azimuth,omitempty"`
	Elevation     []float32 `protobuf:"fixed32,4,rep,packed,name=elevation" json:"elevation,omitempty"`
	Snr           []float32 `protobuf:"fixed32,5,rep,packed,name=snr" json:"snr,omitempty"`
	HasAlmanac    []bool    `protobuf:"varint,6,rep,packed,name=has_almanac" json:"has_almanac,omitempty"`
	HasEphemeris  []bool    `protobuf:"varint,7,rep,packed,name=has_ephemeris" json:"has_ephemeris,omitempty"`
	UsedInFix     []bool    `protobuf:"varint,8,rep,packed,name=used_in_fix" json:"used_in_fix,omitempty"`
}

func (m *Signature_AndroidGpsInfo) Reset()                    { *m = Signature_AndroidGpsInfo{} }
func (m *Signature_AndroidGpsInfo) String() string            { return proto.CompactTextString(m) }
func (*Signature_AndroidGpsInfo) ProtoMessage()               {}
func (*Signature_AndroidGpsInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 1} }

type Signature_SensorInfo struct {
	TimestampSnapshot     uint64  `protobuf:"varint,1,opt,name=timestamp_snapshot" json:"timestamp_snapshot,omitempty"`
	LinearAccelerationX   float64 `protobuf:"fixed64,3,opt,name=linear_acceleration_x" json:"linear_acceleration_x,omitempty"`
	LinearAccelerationY   float64 `protobuf:"fixed64,4,opt,name=linear_acceleration_y" json:"linear_acceleration_y,omitempty"`
	LinearAccelerationZ   float64 `protobuf:"fixed64,5,opt,name=linear_acceleration_z" json:"linear_acceleration_z,omitempty"`
	MagneticFieldX        float64 `protobuf:"fixed64,6,opt,name=magnetic_field_x" json:"magnetic_field_x,omitempty"`
	MagneticFieldY        float64 `protobuf:"fixed64,7,opt,name=magnetic_field_y" json:"magnetic_field_y,omitempty"`
	MagneticFieldZ        float64 `protobuf:"fixed64,8,opt,name=magnetic_field_z" json:"magnetic_field_z,omitempty"`
	MagneticFieldAccuracy int32   `protobuf:"varint,9,opt,name=magnetic_field_accuracy" json:"magnetic_field_accuracy,omitempty"`
	AttitudePitch         float64 `protobuf:"fixed64,10,opt,name=attitude_pitch" json:"attitude_pitch,omitempty"`
	AttitudeYaw           float64 `protobuf:"fixed64,11,opt,name=attitude_yaw" json:"attitude_yaw,omitempty"`
	AttitudeRoll          float64 `protobuf:"fixed64,12,opt,name=attitude_roll" json:"attitude_roll,omitempty"`
	RotationRateX         float64 `protobuf:"fixed64,13,opt,name=rotation_rate_x" json:"rotation_rate_x,omitempty"`
	RotationRateY         float64 `protobuf:"fixed64,14,opt,name=rotation_rate_y" json:"rotation_rate_y,omitempty"`
	RotationRateZ         float64 `protobuf:"fixed64,15,opt,name=rotation_rate_z" json:"rotation_rate_z,omitempty"`
	GravityX              float64 `protobuf:"fixed64,16,opt,name=gravity_x" json:"gravity_x,omitempty"`
	GravityY              float64 `protobuf:"fixed64,17,opt,name=gravity_y" json:"gravity_y,omitempty"`
	GravityZ              float64 `protobuf:"fixed64,18,opt,name=gravity_z" json:"gravity_z,omitempty"`
	Status                int32   `protobuf:"varint,19,opt,name=status" json:"status,omitempty"`
}

func (m *Signature_SensorInfo) Reset()                    { *m = Signature_SensorInfo{} }
func (m *Signature_SensorInfo) String() string            { return proto.CompactTextString(m) }
func (*Signature_SensorInfo) ProtoMessage()               {}
func (*Signature_SensorInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 2} }

type Signature_DeviceInfo struct {
	DeviceId              string `protobuf:"bytes,1,opt,name=device_id" json:"device_id,omitempty"`
	AndroidBoardName      string `protobuf:"bytes,2,opt,name=android_board_name" json:"android_board_name,omitempty"`
	AndroidBootloader     string `protobuf:"bytes,3,opt,name=android_bootloader" json:"android_bootloader,omitempty"`
	DeviceBrand           string `protobuf:"bytes,4,opt,name=device_brand" json:"device_brand,omitempty"`
	DeviceModel           string `protobuf:"bytes,5,opt,name=device_model" json:"device_model,omitempty"`
	DeviceModelIdentifier string `protobuf:"bytes,6,opt,name=device_model_identifier" json:"device_model_identifier,omitempty"`
	DeviceModelBoot       string `protobuf:"bytes,7,opt,name=device_model_boot" json:"device_model_boot,omitempty"`
	HardwareManufacturer  string `protobuf:"bytes,8,opt,name=hardware_manufacturer" json:"hardware_manufacturer,omitempty"`
	HardwareModel         string `protobuf:"bytes,9,opt,name=hardware_model" json:"hardware_model,omitempty"`
	FirmwareBrand         string `protobuf:"bytes,10,opt,name=firmware_brand" json:"firmware_brand,omitempty"`
	FirmwareTags          string `protobuf:"bytes,12,opt,name=firmware_tags" json:"firmware_tags,omitempty"`
	FirmwareType          string `protobuf:"bytes,13,opt,name=firmware_type" json:"firmware_type,omitempty"`
	FirmwareFingerprint   string `protobuf:"bytes,14,opt,name=firmware_fingerprint" json:"firmware_fingerprint,omitempty"`
}

func (m *Signature_DeviceInfo) Reset()                    { *m = Signature_DeviceInfo{} }
func (m *Signature_DeviceInfo) String() string            { return proto.CompactTextString(m) }
func (*Signature_DeviceInfo) ProtoMessage()               {}
func (*Signature_DeviceInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 3} }

// Only used in iOS - Android just sends an empty version
type Signature_ActivityStatus struct {
	// all of these had 1 as their value
	StartTimeMs   uint64 `protobuf:"varint,1,opt,name=start_time_ms" json:"start_time_ms,omitempty"`
	UnknownStatus bool   `protobuf:"varint,2,opt,name=unknown_status" json:"unknown_status,omitempty"`
	Walking       bool   `protobuf:"varint,3,opt,name=walking" json:"walking,omitempty"`
	Running       bool   `protobuf:"varint,4,opt,name=running" json:"running,omitempty"`
	Stationary    bool   `protobuf:"varint,5,opt,name=stationary" json:"stationary,omitempty"`
	Automotive    bool   `protobuf:"varint,6,opt,name=automotive" json:"automotive,omitempty"`
	Tilting       bool   `protobuf:"varint,7,opt,name=tilting" json:"tilting,omitempty"`
	Cycling       bool   `protobuf:"varint,8,opt,name=cycling" json:"cycling,omitempty"`
	Status        []byte `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *Signature_ActivityStatus) Reset()                    { *m = Signature_ActivityStatus{} }
func (m *Signature_ActivityStatus) String() string            { return proto.CompactTextString(m) }
func (*Signature_ActivityStatus) ProtoMessage()               {}
func (*Signature_ActivityStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 4} }

// Just a junk message to denote that we don't currently know what message something is.
type UnknownMessage struct {
}

func (m *UnknownMessage) Reset()                    { *m = UnknownMessage{} }
func (m *UnknownMessage) String() string            { return proto.CompactTextString(m) }
func (*UnknownMessage) ProtoMessage()               {}
func (*UnknownMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*ResponseEnvelope)(nil), "POGOProtos.Networking.Envelopes.ResponseEnvelope")
	proto.RegisterType((*ResponseEnvelope_PlatformResponse)(nil), "POGOProtos.Networking.Envelopes.ResponseEnvelope.PlatformResponse")
	proto.RegisterType((*AuthTicket)(nil), "POGOProtos.Networking.Envelopes.AuthTicket")
	proto.RegisterType((*RequestEnvelope)(nil), "POGOProtos.Networking.Envelopes.RequestEnvelope")
	proto.RegisterType((*RequestEnvelope_AuthInfo)(nil), "POGOProtos.Networking.Envelopes.RequestEnvelope.AuthInfo")
	proto.RegisterType((*RequestEnvelope_AuthInfo_JWT)(nil), "POGOProtos.Networking.Envelopes.RequestEnvelope.AuthInfo.JWT")
	proto.RegisterType((*RequestEnvelope_PlatformRequest)(nil), "POGOProtos.Networking.Envelopes.RequestEnvelope.PlatformRequest")
	proto.RegisterType((*Signature)(nil), "POGOProtos.Networking.Envelopes.Signature")
	proto.RegisterType((*Signature_LocationFix)(nil), "POGOProtos.Networking.Envelopes.Signature.LocationFix")
	proto.RegisterType((*Signature_AndroidGpsInfo)(nil), "POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo")
	proto.RegisterType((*Signature_SensorInfo)(nil), "POGOProtos.Networking.Envelopes.Signature.SensorInfo")
	proto.RegisterType((*Signature_DeviceInfo)(nil), "POGOProtos.Networking.Envelopes.Signature.DeviceInfo")
	proto.RegisterType((*Signature_ActivityStatus)(nil), "POGOProtos.Networking.Envelopes.Signature.ActivityStatus")
	proto.RegisterType((*UnknownMessage)(nil), "POGOProtos.Networking.Envelopes.UnknownMessage")
	proto.RegisterEnum("POGOProtos.Networking.Envelopes.ResponseEnvelope_StatusCode", ResponseEnvelope_StatusCode_name, ResponseEnvelope_StatusCode_value)
}

func init() { proto.RegisterFile("networking_envelopes.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1608 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x57, 0x5d, 0x6e, 0x1b, 0xc9,
	0x11, 0xde, 0x21, 0x45, 0x89, 0x2c, 0x92, 0xe2, 0x68, 0xf4, 0x37, 0xe6, 0x7a, 0xb1, 0x8c, 0x5f,
	0xc2, 0x20, 0x80, 0x02, 0x4b, 0x6b, 0x27, 0x06, 0x12, 0x64, 0x65, 0x9b, 0xbb, 0x91, 0xa5, 0x25,
	0x65, 0x92, 0x8a, 0x81, 0x24, 0x40, 0xa3, 0x3d, 0xd3, 0x24, 0x1b, 0x1e, 0x76, 0x4f, 0xba, 0x9b,
	0x92, 0xa8, 0x13, 0xe4, 0x02, 0x41, 0x8e, 0x91, 0x03, 0xe4, 0x25, 0x40, 0x9e, 0x73, 0x81, 0x1c,
	0x24, 0xcf, 0x41, 0xd7, 0xcc, 0x50, 0x1c, 0xda, 0x82, 0xc3, 0x20, 0x6f, 0xc4, 0x57, 0xdd, 0x55,
	0xd5, 0x55, 0xdf, 0x57, 0x35, 0x84, 0xa6, 0x60, 0xe6, 0x46, 0xaa, 0x0f, 0x5c, 0x8c, 0x09, 0x13,
	0xd7, 0x2c, 0x92, 0x31, 0xd3, 0x47, 0xb1, 0x92, 0x46, 0x7a, 0x5f, 0x5f, 0xf6, 0xbe, 0xef, 0x5d,
	0xda, 0x9f, 0xfa, 0xa8, 0xbb, 0x38, 0x76, 0xd4, 0xc9, 0x8e, 0x35, 0x1f, 0x2d, 0x5d, 0x8e, 0x23,
	0x6a, 0x46, 0x52, 0x4d, 0x93, 0xbb, 0x39, 0x93, 0x62, 0x7f, 0x9c, 0x31, 0x6d, 0x52, 0xb7, 0x4f,
	0xfe, 0xbd, 0x01, 0x6e, 0x9f, 0xe9, 0x58, 0x0a, 0xcd, 0x32, 0x5f, 0xde, 0x5b, 0xa8, 0x6a, 0x43,
	0xcd, 0x4c, 0x93, 0x40, 0x86, 0xcc, 0x77, 0x5a, 0x4e, 0x7b, 0xfb, 0xf8, 0x97, 0x47, 0x9f, 0xc9,
	0xe0, 0x68, 0xd5, 0xcf, 0xd1, 0x00, 0x9d, 0xbc, 0x92, 0x21, 0xf3, 0x3c, 0x80, 0x34, 0x32, 0xe1,
	0xa1, 0x5f, 0x68, 0x39, 0xed, 0x0d, 0xaf, 0x01, 0x5b, 0x34, 0xe6, 0x64, 0xa6, 0x22, 0xbf, 0xd8,
	0x72, 0xda, 0x15, 0xef, 0x0f, 0xe0, 0x66, 0x99, 0x13, 0xc5, 0xcc, 0x4c, 0x09, 0xed, 0x6f, 0xb6,
	0x8a, 0xed, 0xea, 0xf1, 0xcb, 0xf5, 0x83, 0x5f, 0xa6, 0x9e, 0x32, 0x83, 0xf7, 0x2d, 0x54, 0xe9,
	0xcc, 0x4c, 0x88, 0xe1, 0xc1, 0x07, 0x66, 0xfc, 0xad, 0x96, 0xd3, 0xae, 0x1e, 0xff, 0xf4, 0xb3,
	0x8e, 0x4f, 0x67, 0x66, 0x32, 0xc4, 0x2b, 0x36, 0xe1, 0x2c, 0xad, 0xb0, 0x55, 0x6c, 0xd7, 0xbc,
	0x3a, 0x94, 0x98, 0x52, 0x52, 0xf9, 0xcc, 0xe6, 0xdf, 0x1c, 0x83, 0xfb, 0x51, 0xd4, 0x53, 0xd8,
	0x30, 0xf3, 0x38, 0x2b, 0xe2, 0xc9, 0x03, 0xe1, 0xb2, 0x6b, 0x4b, 0x59, 0x63, 0xb1, 0x86, 0xf3,
	0x98, 0x79, 0x2e, 0x94, 0x55, 0xea, 0x0e, 0x2b, 0x57, 0x7b, 0xf2, 0x77, 0x07, 0x60, 0xa9, 0xb8,
	0x55, 0xd8, 0xba, 0xea, 0x9e, 0x77, 0x7b, 0xef, 0xba, 0xee, 0x17, 0xde, 0x26, 0x14, 0x7a, 0xe7,
	0xae, 0xe3, 0x35, 0xe1, 0xa0, 0x77, 0x4e, 0xfa, 0x97, 0xaf, 0xc8, 0x55, 0xff, 0x82, 0x9c, 0x75,
	0x49, 0xbf, 0x33, 0xb8, 0xec, 0x75, 0x07, 0x1d, 0xb7, 0xe0, 0x35, 0xa0, 0xfa, 0xf2, 0xf4, 0x35,
	0xe9, 0x77, 0xde, 0x5e, 0x75, 0x06, 0x43, 0xb7, 0xe8, 0xed, 0x42, 0xe3, 0xac, 0xfb, 0xdb, 0xd3,
	0x8b, 0xb3, 0x7b, 0xf0, 0xc4, 0x7b, 0x0c, 0x7e, 0x06, 0x5e, 0x5e, 0x9c, 0x0e, 0xbf, 0xeb, 0xf5,
	0x7f, 0x58, 0x58, 0xbf, 0xf1, 0x6a, 0x50, 0xee, 0x77, 0x5e, 0x9f, 0xf5, 0x3b, 0xaf, 0x86, 0xee,
	0x33, 0xef, 0x10, 0x76, 0x07, 0x9d, 0xc1, 0xe0, 0xac, 0xd7, 0x25, 0xe9, 0x9d, 0xd3, 0x61, 0xe7,
	0xb5, 0x1b, 0x7a, 0x07, 0xe0, 0x65, 0x4e, 0x4e, 0xaf, 0x86, 0xbf, 0x21, 0xc3, 0xde, 0x79, 0xa7,
	0xeb, 0x8e, 0x9e, 0x74, 0x00, 0x96, 0x2a, 0x5b, 0x87, 0x92, 0x36, 0x54, 0x19, 0x2c, 0x53, 0xcd,
	0xfb, 0x12, 0x76, 0xd9, 0x6d, 0xcc, 0x15, 0x23, 0x86, 0x4f, 0x99, 0x36, 0x74, 0x1a, 0x93, 0xa9,
	0x4e, 0x69, 0x53, 0x85, 0x22, 0x13, 0x21, 0x52, 0xa6, 0xf6, 0xe4, 0x1f, 0x25, 0x68, 0xa4, 0xb5,
	0x5a, 0xd0, 0x77, 0xf7, 0x63, 0xfa, 0x96, 0x56, 0x08, 0x58, 0x44, 0x4f, 0x2f, 0x6c, 0x61, 0x13,
	0x39, 0xf8, 0x1b, 0xc8, 0xb3, 0x1f, 0x3f, 0xd0, 0x9f, 0x7e, 0xa6, 0x9a, 0xf4, 0x87, 0xf7, 0x7b,
	0xd8, 0x59, 0xa2, 0x6a, 0xea, 0x23, 0xe1, 0xea, 0xb7, 0xff, 0x05, 0x57, 0x73, 0x09, 0xaf, 0x36,
	0xdd, 0x36, 0x3c, 0xa2, 0x86, 0x9b, 0x59, 0xc8, 0x90, 0xa6, 0x8e, 0xb7, 0x03, 0x95, 0x48, 0x8a,
	0x71, 0x02, 0x95, 0x11, 0x72, 0xa1, 0x4c, 0x83, 0x60, 0xa6, 0x68, 0x30, 0xf7, 0x2b, 0x88, 0x5c,
	0x40, 0x05, 0x09, 0xce, 0xc5, 0x48, 0xfa, 0x80, 0xf4, 0x7e, 0xb1, 0x76, 0x2e, 0xb6, 0x29, 0x67,
	0x62, 0x24, 0x57, 0xe5, 0x52, 0x5d, 0x5f, 0x2e, 0x3f, 0x82, 0x47, 0x53, 0x4d, 0x34, 0x17, 0x01,
	0x23, 0x11, 0xd5, 0x86, 0x44, 0x32, 0xa0, 0x86, 0x4b, 0x31, 0xe2, 0xb7, 0x7e, 0xad, 0xe5, 0xb4,
	0x8b, 0xcd, 0x3f, 0x3b, 0x50, 0x5e, 0x44, 0x74, 0xa1, 0x1c, 0x2b, 0x79, 0xcd, 0x43, 0xa6, 0xb0,
	0x69, 0x15, 0xef, 0x02, 0x4a, 0x46, 0x7e, 0x60, 0x02, 0x3b, 0x5f, 0x3d, 0xfe, 0xd5, 0xff, 0xfc,
	0x9a, 0xa3, 0x37, 0xef, 0x86, 0xcd, 0x9f, 0x40, 0xf1, 0xcd, 0xbb, 0xa1, 0x0d, 0x13, 0x48, 0x61,
	0x98, 0x30, 0x3a, 0x0d, 0xe3, 0x42, 0x79, 0x26, 0x3e, 0x08, 0x79, 0x23, 0x8e, 0x31, 0x52, 0xa9,
	0x39, 0x85, 0xc6, 0x6a, 0x53, 0xfe, 0x0f, 0x42, 0x3e, 0x84, 0x46, 0xc6, 0xc1, 0x29, 0xd3, 0x9a,
	0x8e, 0x33, 0x3d, 0xff, 0xc5, 0x83, 0xca, 0x80, 0x8f, 0x05, 0x35, 0x33, 0xc5, 0xbc, 0x5f, 0xc3,
	0xe6, 0x88, 0xb3, 0x28, 0x7c, 0xea, 0x3b, 0x48, 0xa8, 0x9f, 0x7d, 0xf6, 0xd9, 0x57, 0x49, 0xf6,
	0x3f, 0x24, 0x4e, 0xbd, 0xaf, 0x60, 0xff, 0x5e, 0x37, 0x49, 0xfd, 0x13, 0x75, 0x25, 0x02, 0xda,
	0x4e, 0xfd, 0x9f, 0xa4, 0x63, 0xf7, 0x02, 0x6a, 0x59, 0x67, 0x88, 0x6d, 0x4d, 0x22, 0x85, 0xe7,
	0x9f, 0x8d, 0xba, 0xc8, 0xf8, 0xe8, 0x22, 0xbd, 0xfe, 0x1d, 0xbf, 0xf5, 0xce, 0xa1, 0x3c, 0x8e,
	0x75, 0x42, 0xc2, 0x12, 0x7a, 0x7a, 0xb1, 0x86, 0xa7, 0x53, 0x11, 0x2a, 0xc9, 0xc3, 0xef, 0x63,
	0x8d, 0x94, 0xc8, 0x4a, 0xf1, 0x3c, 0xd5, 0xd6, 0xda, 0xa5, 0x78, 0x03, 0x55, 0xcd, 0x84, 0x96,
	0x2a, 0x49, 0x68, 0x0b, 0xbd, 0x3c, 0x5b, 0x23, 0xa1, 0x01, 0xde, 0xc6, 0x64, 0xde, 0x40, 0x35,
	0x64, 0xd7, 0x3c, 0x60, 0x89, 0xaf, 0x32, 0x72, 0x72, 0x1d, 0x5f, 0xaf, 0xf1, 0x36, 0xfa, 0xea,
	0x43, 0x83, 0x06, 0x86, 0x5f, 0x73, 0x33, 0x27, 0xc9, 0xb0, 0x42, 0x11, 0xaf, 0x59, 0xac, 0xd4,
	0x43, 0xb2, 0x0a, 0xbc, 0x03, 0xd8, 0x5e, 0xf4, 0x71, 0x42, 0xf5, 0xe4, 0x29, 0x0e, 0x81, 0x92,
	0x5d, 0x5b, 0x09, 0x9f, 0x9e, 0xa2, 0x8a, 0xcb, 0xf7, 0xc0, 0x31, 0xca, 0x70, 0x09, 0x38, 0xf1,
	0xeb, 0xf9, 0x2b, 0xdf, 0xf8, 0xdb, 0x79, 0xe0, 0x99, 0xdf, 0x40, 0xd2, 0x2c, 0x80, 0xe7, 0xbe,
	0x9b, 0x3f, 0xf1, 0x73, 0x7f, 0x27, 0x7f, 0xe2, 0x17, 0xbe, 0x97, 0x07, 0x5e, 0xf8, 0xbb, 0x18,
	0x76, 0x35, 0xe1, 0x63, 0x7f, 0x2f, 0xe7, 0xea, 0xf8, 0xa9, 0xbf, 0x8f, 0x07, 0xf7, 0xa0, 0xa6,
	0x99, 0xd6, 0xd9, 0x39, 0xff, 0x00, 0xb7, 0xc4, 0x0e, 0x54, 0x16, 0x34, 0xf7, 0x0f, 0x91, 0xda,
	0x7b, 0x50, 0xcb, 0x14, 0x86, 0x07, 0xfd, 0x56, 0xb1, 0xbd, 0x61, 0x0f, 0x66, 0xfa, 0x7e, 0xe6,
	0x3f, 0xc2, 0xc1, 0xf3, 0xa7, 0x02, 0x54, 0x97, 0x59, 0xfb, 0xf1, 0xec, 0x69, 0x82, 0xb7, 0x24,
	0x22, 0x41, 0x63, 0x3d, 0x91, 0x99, 0x82, 0xec, 0xec, 0x8d, 0xd2, 0x01, 0xbd, 0xd1, 0x72, 0xda,
	0x85, 0xdc, 0xc8, 0xae, 0x23, 0x92, 0x1b, 0xd9, 0xdb, 0x08, 0xd9, 0x2d, 0x17, 0x33, 0x16, 0x62,
	0x3d, 0x0a, 0x56, 0x87, 0x81, 0x9c, 0x29, 0xcd, 0xf0, 0xd9, 0x05, 0xbb, 0xf5, 0x26, 0x52, 0xf1,
	0x3b, 0x29, 0x0c, 0x8d, 0xc8, 0x62, 0xb8, 0xef, 0xa3, 0xf1, 0x11, 0xec, 0x5c, 0x33, 0x65, 0x78,
	0xb0, 0x6c, 0x3a, 0x40, 0xd3, 0x21, 0x34, 0xb2, 0xdc, 0x33, 0x2e, 0x35, 0x31, 0xcd, 0x3a, 0x94,
	0x46, 0x91, 0x94, 0xca, 0xff, 0xb2, 0xe5, 0xb4, 0xeb, 0xde, 0x3e, 0xd4, 0x17, 0xe5, 0xc6, 0x51,
	0xf6, 0xd8, 0x9e, 0x6a, 0xfe, 0xd5, 0x81, 0xed, 0x15, 0xd9, 0xed, 0x42, 0xd5, 0xbe, 0x9d, 0x18,
	0x89, 0x03, 0xc1, 0x41, 0x6f, 0x07, 0xb0, 0xad, 0xa9, 0x61, 0x51, 0xc4, 0x0d, 0xd3, 0x24, 0x56,
	0x76, 0x2a, 0x17, 0x93, 0x6e, 0xd1, 0x3b, 0x3e, 0x9d, 0x99, 0x89, 0x5f, 0x6c, 0x15, 0x93, 0x97,
	0xb3, 0x88, 0x5d, 0x63, 0x20, 0x1c, 0x26, 0x05, 0xbb, 0xb3, 0xb5, 0x50, 0x38, 0x0f, 0x0a, 0xd6,
	0xfb, 0x84, 0x6a, 0x42, 0xa3, 0x29, 0x15, 0x34, 0x40, 0x65, 0x97, 0x6d, 0x72, 0x16, 0x64, 0xf1,
	0x84, 0x4d, 0x99, 0xe2, 0x1a, 0xa5, 0x5a, 0xb6, 0x67, 0x67, 0x9a, 0x85, 0x84, 0x27, 0xa3, 0xa9,
	0x6c, 0xc1, 0xe6, 0x3f, 0x8b, 0x00, 0x4b, 0xba, 0xfc, 0x74, 0xa7, 0x92, 0xa4, 0xbf, 0x82, 0xfd,
	0x88, 0x0b, 0x46, 0x95, 0x2d, 0x1a, 0x8b, 0x98, 0x4a, 0x9e, 0x7f, 0x8b, 0xa3, 0xcf, 0x79, 0xc8,
	0x3c, 0xc7, 0xae, 0x3e, 0x68, 0xbe, 0xf3, 0x4b, 0x68, 0xf6, 0xc1, 0x9d, 0xd2, 0xb1, 0x60, 0x86,
	0x07, 0x04, 0x09, 0x4b, 0x6e, 0xfd, 0xcd, 0x07, 0x2c, 0xf3, 0x74, 0x93, 0x7f, 0x6c, 0xb9, 0x4b,
	0x17, 0xfa, 0xd7, 0x70, 0xb8, 0x62, 0xc9, 0xed, 0xf7, 0x92, 0x6d, 0x00, 0x35, 0x09, 0xc7, 0x48,
	0xcc, 0x4d, 0x30, 0x41, 0x7d, 0x3b, 0x96, 0xf4, 0x0b, 0x7c, 0x4e, 0x6f, 0x50, 0xe4, 0x8e, 0x2d,
	0xe8, 0x02, 0x55, 0x32, 0x8a, 0x50, 0xea, 0x0e, 0xee, 0x20, 0x69, 0x92, 0x77, 0x28, 0x6a, 0x18,
	0xb9, 0x45, 0xbe, 0x7e, 0xc2, 0x30, 0x47, 0xd6, 0x7e, 0xc2, 0x70, 0x87, 0x23, 0x00, 0x3f, 0x4a,
	0xc6, 0x8a, 0xe2, 0x08, 0xbb, 0xc5, 0x21, 0x90, 0x83, 0xe6, 0x38, 0x06, 0x72, 0xd0, 0x1d, 0x12,
	0xdf, 0xb1, 0xc4, 0x4f, 0x79, 0xba, 0x8b, 0xdb, 0xf6, 0x5f, 0x05, 0x80, 0xa5, 0xd9, 0xb8, 0x03,
	0x95, 0x6c, 0xce, 0x86, 0xf7, 0x62, 0xa4, 0x09, 0x45, 0xc9, 0x7b, 0x49, 0x55, 0x48, 0x04, 0x9d,
	0x26, 0xcb, 0x73, 0xc5, 0x26, 0x4d, 0x24, 0xa9, 0x15, 0x71, 0xb2, 0xda, 0xf6, 0xa0, 0x96, 0xba,
	0x7a, 0xaf, 0xa8, 0x08, 0xb1, 0xad, 0xcb, 0xe8, 0x54, 0x86, 0x2c, 0xc2, 0x6e, 0x56, 0x6c, 0xfd,
	0x97, 0x51, 0xc2, 0x43, 0x26, 0x0c, 0x1f, 0x71, 0xa6, 0xb0, 0xa9, 0x15, 0x2b, 0xc1, 0xdc, 0x01,
	0x1b, 0x0d, 0xbb, 0x5a, 0xb1, 0x44, 0x99, 0x50, 0x15, 0xde, 0x50, 0xc5, 0xc8, 0x94, 0x8a, 0xd9,
	0x88, 0x06, 0x76, 0x42, 0x2b, 0x6c, 0x6d, 0xc5, 0x76, 0xee, 0xde, 0x8c, 0x21, 0x2b, 0x19, 0x3e,
	0xe2, 0x6a, 0x8a, 0x78, 0x92, 0x20, 0x20, 0xbe, 0x0f, 0xf5, 0x05, 0x6e, 0xe8, 0x58, 0x63, 0xef,
	0x56, 0x60, 0x2b, 0xe0, 0x3a, 0xc2, 0x8f, 0x61, 0x6f, 0x01, 0x8f, 0xb8, 0x18, 0x33, 0x15, 0x2b,
	0x2e, 0x0c, 0xb6, 0xaf, 0xd2, 0xfc, 0x9b, 0x95, 0x77, 0x7e, 0x51, 0xec, 0x43, 0x1d, 0xbf, 0x07,
	0xf0, 0xeb, 0xda, 0x7e, 0x58, 0x2f, 0x04, 0x9e, 0x8e, 0xc9, 0x6c, 0x8c, 0x14, 0xb2, 0xed, 0x70,
	0x43, 0x23, 0xbb, 0x85, 0xb0, 0xaa, 0x08, 0xa8, 0x99, 0x10, 0x16, 0xd8, 0x40, 0xc0, 0x03, 0xd0,
	0x09, 0x43, 0xa8, 0x9a, 0x63, 0x39, 0x11, 0xa3, 0x33, 0x23, 0xa7, 0xd2, 0xf0, 0x6b, 0x86, 0x15,
	0xc4, 0x8b, 0x86, 0x47, 0xc6, 0x5e, 0xdc, 0xca, 0x80, 0x60, 0x1e, 0x44, 0x16, 0x28, 0x23, 0x70,
	0x4f, 0x8d, 0x0a, 0x7e, 0x19, 0xb9, 0xb0, 0x9d, 0xdf, 0xe8, 0x2f, 0xcb, 0xbf, 0xdb, 0xc4, 0xbf,
	0xae, 0xfa, 0xf2, 0x8b, 0x4b, 0xe7, 0x7d, 0xf2, 0xfb, 0xe4, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x4a, 0x3b, 0x9b, 0x8a, 0x3b, 0x0f, 0x00, 0x00,
}
