// Code generated by protoc-gen-go.
// source: settings_master_pokemon.proto
// DO NOT EDIT!

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of PokemonType from enums.proto

// Ignoring public import of ItemCategory from enums.proto

// Ignoring public import of PokemonMovementType from enums.proto

// Ignoring public import of QuestType from enums.proto

// Ignoring public import of EncounterType from enums.proto

// Ignoring public import of Filter from enums.proto

// Ignoring public import of Platform from enums.proto

// Ignoring public import of TutorialState from enums.proto

// Ignoring public import of Costume from enums.proto

// Ignoring public import of ItemEffect from enums.proto

// Ignoring public import of BadgeType from enums.proto

// Ignoring public import of CameraTarget from enums.proto

// Ignoring public import of PokemonMove from enums.proto

// Ignoring public import of TeamColor from enums.proto

// Ignoring public import of Form from enums.proto

// Ignoring public import of PokemonId from enums.proto

// Ignoring public import of Gender from enums.proto

// Ignoring public import of ActivityType from enums.proto

// Ignoring public import of Slot from enums.proto

// Ignoring public import of HoloIapItemCategory from enums.proto

// Ignoring public import of CameraInterpolation from enums.proto

// Ignoring public import of PokemonRarity from enums.proto

// Ignoring public import of PokemonFamilyId from enums.proto

// Ignoring public import of ItemAward from inventory_item.proto

// Ignoring public import of ItemData from inventory_item.proto

// Ignoring public import of ItemType from inventory_item.proto

// Ignoring public import of ItemId from inventory_item.proto

type CameraAttributes struct {
	DiskRadiusM       float32 `protobuf:"fixed32,1,opt,name=disk_radius_m" json:"disk_radius_m,omitempty"`
	CylinderRadiusM   float32 `protobuf:"fixed32,2,opt,name=cylinder_radius_m" json:"cylinder_radius_m,omitempty"`
	CylinderHeightM   float32 `protobuf:"fixed32,3,opt,name=cylinder_height_m" json:"cylinder_height_m,omitempty"`
	CylinderGroundM   float32 `protobuf:"fixed32,4,opt,name=cylinder_ground_m" json:"cylinder_ground_m,omitempty"`
	ShoulderModeScale float32 `protobuf:"fixed32,5,opt,name=shoulder_mode_scale" json:"shoulder_mode_scale,omitempty"`
}

func (m *CameraAttributes) Reset()                    { *m = CameraAttributes{} }
func (m *CameraAttributes) String() string            { return proto.CompactTextString(m) }
func (*CameraAttributes) ProtoMessage()               {}
func (*CameraAttributes) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{0} }

type EvolutionBranch struct {
	Evolution                PokemonId `protobuf:"varint,1,opt,name=evolution,enum=POGOProtos.Enums.PokemonId" json:"evolution,omitempty"`
	EvolutionItemRequirement ItemId    `protobuf:"varint,2,opt,name=evolution_item_requirement,enum=POGOProtos.Inventory.Item.ItemId" json:"evolution_item_requirement,omitempty"`
	CandyCost                int32     `protobuf:"varint,3,opt,name=candy_cost" json:"candy_cost,omitempty"`
}

func (m *EvolutionBranch) Reset()                    { *m = EvolutionBranch{} }
func (m *EvolutionBranch) String() string            { return proto.CompactTextString(m) }
func (*EvolutionBranch) ProtoMessage()               {}
func (*EvolutionBranch) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{1} }

type EncounterAttributes struct {
	BaseCaptureRate            float32             `protobuf:"fixed32,1,opt,name=base_capture_rate" json:"base_capture_rate,omitempty"`
	BaseFleeRate               float32             `protobuf:"fixed32,2,opt,name=base_flee_rate" json:"base_flee_rate,omitempty"`
	CollisionRadiusM           float32             `protobuf:"fixed32,3,opt,name=collision_radius_m" json:"collision_radius_m,omitempty"`
	CollisionHeightM           float32             `protobuf:"fixed32,4,opt,name=collision_height_m" json:"collision_height_m,omitempty"`
	CollisionHeadRadiusM       float32             `protobuf:"fixed32,5,opt,name=collision_head_radius_m" json:"collision_head_radius_m,omitempty"`
	MovementType               PokemonMovementType `protobuf:"varint,6,opt,name=movement_type,enum=POGOProtos.Enums.PokemonMovementType" json:"movement_type,omitempty"`
	MovementTimerS             float32             `protobuf:"fixed32,7,opt,name=movement_timer_s" json:"movement_timer_s,omitempty"`
	JumpTimeS                  float32             `protobuf:"fixed32,8,opt,name=jump_time_s" json:"jump_time_s,omitempty"`
	AttackTimerS               float32             `protobuf:"fixed32,9,opt,name=attack_timer_s" json:"attack_timer_s,omitempty"`
	BonusCandyCaptureReward    int32               `protobuf:"varint,10,opt,name=bonus_candy_capture_reward" json:"bonus_candy_capture_reward,omitempty"`
	BonusStardustCaptureReward int32               `protobuf:"varint,11,opt,name=bonus_stardust_capture_reward" json:"bonus_stardust_capture_reward,omitempty"`
	AttackProbability          float32             `protobuf:"fixed32,12,opt,name=attack_probability" json:"attack_probability,omitempty"`
	DodgeProbability           float32             `protobuf:"fixed32,13,opt,name=dodge_probability" json:"dodge_probability,omitempty"`
	DodgeDurationS             float32             `protobuf:"fixed32,14,opt,name=dodge_duration_s" json:"dodge_duration_s,omitempty"`
	DodgeDistance              float32             `protobuf:"fixed32,15,opt,name=dodge_distance" json:"dodge_distance,omitempty"`
	CameraDistance             float32             `protobuf:"fixed32,16,opt,name=camera_distance" json:"camera_distance,omitempty"`
	MinPokemonActionFrequencyS float32             `protobuf:"fixed32,17,opt,name=min_pokemon_action_frequency_s" json:"min_pokemon_action_frequency_s,omitempty"`
	MaxPokemonActionFrequencyS float32             `protobuf:"fixed32,18,opt,name=max_pokemon_action_frequency_s" json:"max_pokemon_action_frequency_s,omitempty"`
}

func (m *EncounterAttributes) Reset()                    { *m = EncounterAttributes{} }
func (m *EncounterAttributes) String() string            { return proto.CompactTextString(m) }
func (*EncounterAttributes) ProtoMessage()               {}
func (*EncounterAttributes) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{2} }

type StatsAttributes struct {
	BaseStamina      int32 `protobuf:"varint,1,opt,name=base_stamina" json:"base_stamina,omitempty"`
	BaseAttack       int32 `protobuf:"varint,2,opt,name=base_attack" json:"base_attack,omitempty"`
	BaseDefense      int32 `protobuf:"varint,3,opt,name=base_defense" json:"base_defense,omitempty"`
	DodgeEnergyDelta int32 `protobuf:"varint,8,opt,name=dodge_energy_delta" json:"dodge_energy_delta,omitempty"`
}

func (m *StatsAttributes) Reset()                    { *m = StatsAttributes{} }
func (m *StatsAttributes) String() string            { return proto.CompactTextString(m) }
func (*StatsAttributes) ProtoMessage()               {}
func (*StatsAttributes) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{3} }

type PokemonGenderSettings struct {
	MalePercent       float32 `protobuf:"fixed32,1,opt,name=male_percent" json:"male_percent,omitempty"`
	FemalePercent     float32 `protobuf:"fixed32,2,opt,name=female_percent" json:"female_percent,omitempty"`
	GenderlessPercent float32 `protobuf:"fixed32,3,opt,name=genderless_percent" json:"genderless_percent,omitempty"`
}

func (m *PokemonGenderSettings) Reset()                    { *m = PokemonGenderSettings{} }
func (m *PokemonGenderSettings) String() string            { return proto.CompactTextString(m) }
func (*PokemonGenderSettings) ProtoMessage()               {}
func (*PokemonGenderSettings) Descriptor() ([]byte, []int) { return fileDescriptor25, []int{4} }

func init() {
	proto.RegisterType((*CameraAttributes)(nil), "POGOProtos.Settings.Master.Pokemon.CameraAttributes")
	proto.RegisterType((*EvolutionBranch)(nil), "POGOProtos.Settings.Master.Pokemon.EvolutionBranch")
	proto.RegisterType((*EncounterAttributes)(nil), "POGOProtos.Settings.Master.Pokemon.EncounterAttributes")
	proto.RegisterType((*StatsAttributes)(nil), "POGOProtos.Settings.Master.Pokemon.StatsAttributes")
	proto.RegisterType((*PokemonGenderSettings)(nil), "POGOProtos.Settings.Master.Pokemon.PokemonGenderSettings")
}

func init() { proto.RegisterFile("settings_master_pokemon.proto", fileDescriptor25) }

var fileDescriptor25 = []byte{
	// 641 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x94, 0x4f, 0x4f, 0x1b, 0x3b,
	0x14, 0xc5, 0x5f, 0x80, 0xf0, 0xe0, 0x02, 0x49, 0x18, 0xe0, 0x31, 0x04, 0xf1, 0xda, 0x46, 0xa2,
	0xea, 0x6a, 0x16, 0x74, 0xdb, 0x4d, 0xa9, 0x22, 0x94, 0x05, 0x22, 0x12, 0x5d, 0x75, 0x63, 0x39,
	0xf6, 0x4d, 0xe2, 0x32, 0xb6, 0xa7, 0xb6, 0x87, 0x76, 0x3e, 0x49, 0x37, 0xfd, 0x36, 0xfd, 0x62,
	0xd5, 0xdc, 0xf9, 0x93, 0x50, 0xd4, 0x6e, 0xa2, 0xd1, 0x3d, 0xc7, 0x8e, 0xcf, 0x6f, 0x8e, 0x07,
	0x2e, 0x3c, 0x86, 0xa0, 0xcc, 0xc2, 0x33, 0xcd, 0x7d, 0x40, 0xc7, 0x32, 0xfb, 0x80, 0xda, 0x9a,
	0x24, 0x73, 0x36, 0xd8, 0x68, 0x34, 0xbd, 0xbb, 0xb9, 0x9b, 0x96, 0x8f, 0x3e, 0xb9, 0xaf, 0x9d,
	0xc9, 0x2d, 0x39, 0x93, 0x69, 0xe5, 0x1c, 0xee, 0xa1, 0xc9, 0xb5, 0xaf, 0x16, 0x0c, 0x8f, 0x95,
	0x79, 0x44, 0x13, 0xac, 0x2b, 0x98, 0x0a, 0xa8, 0xab, 0xe9, 0xe8, 0x7b, 0x07, 0x06, 0x1f, 0xb8,
	0x46, 0xc7, 0xdf, 0x87, 0xe0, 0xd4, 0x2c, 0x0f, 0xe8, 0xa3, 0x13, 0x38, 0x90, 0xca, 0x3f, 0x30,
	0xc7, 0xa5, 0xca, 0x3d, 0xd3, 0x71, 0xe7, 0x65, 0xe7, 0xcd, 0x46, 0x74, 0x06, 0x87, 0xa2, 0x48,
	0x95, 0x91, 0xe8, 0x56, 0xd2, 0xc6, 0x33, 0x69, 0x89, 0x6a, 0xb1, 0x0c, 0x4c, 0xc7, 0x9b, 0xcf,
	0xa4, 0x85, 0xb3, 0xb9, 0x91, 0x4c, 0xc7, 0x5b, 0x24, 0x9d, 0xc3, 0x91, 0x5f, 0xda, 0x3c, 0x2d,
	0x25, 0x6d, 0x25, 0x32, 0x2f, 0x78, 0x8a, 0x71, 0xb7, 0x14, 0x47, 0x3f, 0x3a, 0xd0, 0x1f, 0x3f,
	0xda, 0x34, 0x0f, 0xca, 0x9a, 0x6b, 0xc7, 0x8d, 0x58, 0x46, 0x09, 0xec, 0x62, 0x33, 0xa2, 0x43,
	0xf5, 0xae, 0xce, 0x93, 0x35, 0x10, 0x63, 0xca, 0x5b, 0xc7, 0x9f, 0xc8, 0x68, 0x0c, 0xc3, 0xd6,
	0x4f, 0xa9, 0x99, 0xc3, 0x2f, 0xb9, 0x72, 0xa8, 0xd1, 0x04, 0x3a, 0x7a, 0xef, 0xea, 0xd5, 0xfa,
	0x06, 0x93, 0x86, 0x51, 0x32, 0x29, 0x19, 0x95, 0x3f, 0x13, 0x19, 0x45, 0x00, 0x82, 0x1b, 0x59,
	0x30, 0x61, 0x7d, 0xa0, 0x58, 0xdd, 0xd1, 0xcf, 0x2d, 0x38, 0x1a, 0x1b, 0x61, 0x73, 0x13, 0xd0,
	0xad, 0xb1, 0x3b, 0x83, 0xc3, 0x19, 0xf7, 0xc8, 0x04, 0xcf, 0x42, 0xee, 0x90, 0x39, 0x1e, 0xb0,
	0xe6, 0xf7, 0x1f, 0xf4, 0x48, 0x9a, 0xa7, 0x58, 0xcf, 0x2b, 0x78, 0x43, 0x88, 0x84, 0x4d, 0x53,
	0xe5, 0xcb, 0x53, 0xb6, 0x60, 0x37, 0x9f, 0x6b, 0x2d, 0xd9, 0x0a, 0xdf, 0x0b, 0x38, 0x5d, 0xd7,
	0xb8, 0x5c, 0x2d, 0x26, 0x84, 0xd1, 0x3b, 0x38, 0xd0, 0xf6, 0x91, 0xc2, 0xb2, 0x50, 0x64, 0x18,
	0x6f, 0x53, 0xe2, 0xcb, 0x3f, 0x22, 0xbb, 0xad, 0xdd, 0x1f, 0x8b, 0x0c, 0xa3, 0x18, 0x06, 0xab,
	0xd5, 0x4a, 0xa3, 0x63, 0x3e, 0xfe, 0x97, 0xf6, 0x3d, 0x82, 0xbd, 0xcf, 0xb9, 0xce, 0x68, 0xca,
	0x7c, 0xbc, 0xd3, 0xa4, 0xe3, 0x21, 0x70, 0xf1, 0xd0, 0x9a, 0x77, 0x69, 0x3e, 0x82, 0xe1, 0xcc,
	0x9a, 0xdc, 0xb3, 0x1a, 0x61, 0xc3, 0x05, 0xbf, 0x72, 0x27, 0x63, 0x28, 0x61, 0x46, 0x97, 0x70,
	0x51, 0x79, 0x7c, 0xe0, 0x4e, 0xe6, 0x3e, 0xfc, 0x6e, 0xdb, 0x23, 0xdb, 0x10, 0xa2, 0xfa, 0x2f,
	0x32, 0x67, 0x67, 0x7c, 0xa6, 0x52, 0x15, 0x8a, 0x78, 0xbf, 0xa9, 0x99, 0xb4, 0x72, 0x81, 0x4f,
	0xa4, 0x03, 0x92, 0x62, 0x18, 0x54, 0x92, 0xcc, 0x1d, 0xa7, 0x2a, 0xf8, 0xb8, 0xd7, 0x9c, 0xb9,
	0x56, 0x94, 0x0f, 0xdc, 0x08, 0x8c, 0xfb, 0x34, 0x3f, 0x85, 0xbe, 0xa0, 0x4b, 0xb1, 0x12, 0x06,
	0x24, 0xbc, 0x86, 0xff, 0xb5, 0x32, 0xcd, 0x55, 0x64, 0x5c, 0xd0, 0x76, 0xf3, 0xb2, 0x55, 0x68,
	0x44, 0xc1, 0x7c, 0x7c, 0xd8, 0xfa, 0xf8, 0xb7, 0xbf, 0xf9, 0x22, 0x2a, 0xb9, 0x81, 0xfe, 0x7d,
	0xe0, 0xc1, 0xaf, 0x15, 0xe8, 0x18, 0xf6, 0xa9, 0x25, 0x3e, 0x70, 0xad, 0x0c, 0xa7, 0xee, 0x74,
	0x4b, 0xe4, 0x34, 0xad, 0xf2, 0x53, 0x71, 0xba, 0xad, 0x55, 0xe2, 0x1c, 0x8d, 0xc7, 0xaa, 0x99,
	0x25, 0xa5, 0x2a, 0x14, 0x1a, 0x74, 0x8b, 0x82, 0x49, 0x4c, 0x03, 0xa7, 0x97, 0xd4, 0x1d, 0x71,
	0x38, 0xa9, 0x5f, 0xf5, 0x0d, 0x96, 0x37, 0xb2, 0xf9, 0x72, 0x94, 0x5b, 0x69, 0x9e, 0x22, 0xcb,
	0xd0, 0x89, 0xf2, 0x6e, 0xb4, 0x8d, 0x9d, 0xe3, 0x93, 0x79, 0xdb, 0xd8, 0x05, 0xad, 0x4f, 0xd1,
	0xfb, 0x56, 0xa3, 0xc6, 0x5e, 0xef, 0x7c, 0xda, 0xa6, 0x4f, 0x8b, 0x9f, 0xfe, 0x33, 0xed, 0xcc,
	0xaa, 0xe7, 0xb7, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x6e, 0x7e, 0xab, 0x0f, 0xce, 0x04, 0x00,
	0x00,
}
